// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/herocwhsu/training/utexample/internal/dao/company (interfaces: CompanyDAO)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCompanyDAO is a mock of CompanyDAO interface.
type MockCompanyDAO struct {
	ctrl     *gomock.Controller
	recorder *MockCompanyDAOMockRecorder
}

// MockCompanyDAOMockRecorder is the mock recorder for MockCompanyDAO.
type MockCompanyDAOMockRecorder struct {
	mock *MockCompanyDAO
}

// NewMockCompanyDAO creates a new mock instance.
func NewMockCompanyDAO(ctrl *gomock.Controller) *MockCompanyDAO {
	mock := &MockCompanyDAO{ctrl: ctrl}
	mock.recorder = &MockCompanyDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCompanyDAO) EXPECT() *MockCompanyDAOMockRecorder {
	return m.recorder
}

// FindByID mocks base method.
func (m *MockCompanyDAO) FindByID(arg0 context.Context, arg1 string) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FindByID indicates an expected call of FindByID.
func (mr *MockCompanyDAOMockRecorder) FindByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockCompanyDAO)(nil).FindByID), arg0, arg1)
}

// Insert mocks base method.
func (m *MockCompanyDAO) Insert(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockCompanyDAOMockRecorder) Insert(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockCompanyDAO)(nil).Insert), arg0, arg1, arg2)
}
